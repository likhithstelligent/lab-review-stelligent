AWSTemplateFormatVersion: "2010-09-09"
Description: "Unrestricted access to a service"
Resources:
  MyS3Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: rashi423324
  MyS3Bucket2:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: priya367238
  MyPolicy1:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Customer Managed Policy"
      ManagedPolicyName: ManagedPolicy62
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - "s3:*"
            Resource:
            - "!Sub arn:aws:s3:::${MyS3Bucket1}"
            - "!Sub arn:aws:s3:::${MyS3Bucket1}/*"
      Users:
        - "kodavati.priyanka.labs"
  MyPolicy2:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Customer Managed Policy"
      ManagedPolicyName: ManagedPolicy4
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
            - "s3:Get*"
            - "s3:List*"
            Resource:
            - "!Sub arn:aws:s3:::${MyS3Bucket2}"
            - "!Sub arn:aws:s3:::${MyS3Bucket2}/*"
      Users:
        - "kodavati.priyanka.labs"
  IamRole123:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              "AWS": "arn:aws:iam::324320755747:user/kodavati.priyanka.labs"
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref MyPolicy1
        - !Ref MyPolicy2

#{
#    "StackId": "arn:aws:cloudformation:us-west-2:324320755747:stack/priyanka78/d0e961a0-369b-11ed-ae3f-02874ff8fb97"
#}